<!DOCTYPE html>
<html>

<head>
  <title><%= title %></title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="stylesheet" type="text/css" href="/css/bootstrap-3.3.7-dist/css/bootstrap.min.css">
  <link rel="stylesheet" type="text/css" href="/css/bootstrap-3.3.7-dist/css/bootstrap-theme.min.css">
  <link rel="stylesheet" href="/css/style.css" />
</head>

<body>

  <div class="container">
    <div class="row">
      <div class="col-sm-4">
        <form>

          <div class="form-group">
            <label for="Name">Your name:</label>
            <input type="text" class="form-control" id="name">
          </div>

          <div class="form-group">
            <label for="email">Your e-mail:</label>
            <input type="email" class="form-control" id="email">
          </div>

          <div class="form-group">
            <label for="lang">Translating into...</label>
            <select class="form-control" id="lang">
              <option value="">(Select)</option>
            </select>
          </div>

          <div class="form-group">
            <label for="bibleversion">Name of Bible version<span id="bibleversion_lang"></span>:</label>
            <input type="text" class="form-control" id="bibleversion" />
          </div>

        </form>

        </form>
      </div>
    </div>
  </div>

  <script type="text/javascript">
    (function () {

      // DOM Handles:
      const langDropdown = document.querySelector('#lang');
      const bibleLangDropdown = document.querySelector('#bibleversion_lang');

      // Methods:

      function onSelectLanguage(e) {
        populateBibleVersionLanguage(e);
      }

      function getAllLanguages() {
        return new Promise((resolve, reject) => {
          fetch("/js/json/ISO-639-1-language.json")
            .then(r => r.json())
            .then(r => {
              resolve(r);
            }).catch(error => reject(error));
        });
      }

      function getTranslatedLanguages() {
        return new Promise((resolve, reject) => {
          fetch("firstprinciples-materialdesign/languages.json")
            .then(r => r.json())
            .then(r => {
              resolve(r);
            }).catch(error => reject(error));
        });
      }

      function populateBibleVersionLanguage(e) {
        let response = "";
        if (e.target.value.length === 2) {
          response = ` for ${e.target.selectedOptions[0].innerText}`;
        }
        bibleLangDropdown.innerText = response;
      }

      function populateLanguages(r) {
        const translatedLanguages = r[0];
        const allLanguages = r[1];
        const untranslatedLanguages = allLanguages.filter(language => {
          let isTranslated = false;
          translatedLanguages.forEach(translated => {
            if (translated.iso === language.code) {
              isTranslated = true;
            }
          });
          return (!isTranslated);
        });
        const untranslatedLanguagesQuantity = untranslatedLanguages.length;
        const defaultEl = document.createElement('option');
        defaultEl.textContent = '(Select)';
        defaultEl.value = '';
        langDropdown.appendChild(defaultEl);
        for (let i = 0; i < untranslatedLanguagesQuantity; i++) {
          const opt = untranslatedLanguages[i];
          const el = document.createElement('option');
          el.textContent = opt.name;
          el.value = opt.code;
          langDropdown.appendChild(el);
        }
      }

      function retrieveAndPopulateLanguages() {
        const translatedLanguages = getTranslatedLanguages();
        const allLanguages = getAllLanguages();
        Promise.all([translatedLanguages, allLanguages]).then(r => {
          populateLanguages(r);
        }).catch(error => console.error(error));
      }

      function init() {
        retrieveAndPopulateLanguages();
      }

      // Listeners:
      langDropdown.addEventListener('change', onSelectLanguage, false);

      // Initialize:
      init();

    })();

  </script>


</body>

</html>